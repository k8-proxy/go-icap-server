title = "ICAPEG configuration file"

[app]
log_level = "debug" # the log levels for tha app, available values: info-->logging the overall progress of the app, debug --> log everything including errors, error --> log infos and just errors
port = 1344
max_filesize = 10000000 #bytes 
resp_scanner_vendor = "glasswall" # Supported vendors for respmod of ICAP: "virustotal", "metadefender" , "vmray" , "clamav" , "none"- none specifies, respmod will be bypassing everything
req_scanner_vendor = "none" # Supported vendors for reqmod of ICAP: "virustotal" , "vmray",
resp_scanner_vendor_shadow = "none"
req_scanner_vendor_shadow = "none"
bypass_extensions = ["*"]
process_extensions = ["txt" , "pdf" , "dmg" , "exe" , "com", "rar" , "unknown"] # * = everything except the ones in bypass, unknown = system couldn't find out the type of the file
preview_bytes = "1024" #byte
preview_enabled = true # options send preview header or not
propagate_error = true
service_caption ="Go-ICAP server - Glasswall Rebuild service"
[glasswall]
 
base_url = "https://3.250.64.227" # 34.242.89.11 52.19.235.59  52.211.35.250 46.101.58.233  3.250.64.227
scan_endpoint = "/api/rebuild/file"
api_key = "<Your glasswall API KEY here>"
timeout  = 35 #seconds , ICAP will return 408 - Request timeout
fail_threshold = 2


#ICAP possible codes: 204 (No modifications needed) , 400 (Bad Request) , 403 (Forbidden) , 500 (Server Error) , 502 (Bad Gateway)
api_response_400 = 400 #Bad Request
api_response_403 = 403 #Forbidden
api_response_415 = 204 #Unsupported Media Type
api_response_422 = 204 #Unprocessable Entity

[icap_something]
base_url = "icap://127.0.0.1:1345"
reqmod_endpoint = "/reqmod"
respmod_endpoint = "/respmod"
options_endpoint = ""
timeout = 50 # seconds, the whole allowed life span of an ICAP request

[icap_somethingelse]
base_url = "icap://127.0.0.1:1346"
reqmod_endpoint = "/reqmod"
respmod_endpoint = "/respmod"
options_endpoint = ""
timeout = 50 # seconds, the whole allowed life span of an ICAP request

[virustotal]
base_url = "https://www.virustotal.com/vtapi/v2"
file_scan_endpoint = "/file/scan"
url_scan_endpoint = "/url/scan"
file_report_endpoint = "/file/report?apikey=%s&resource=%s"
url_report_endpoint = "/url/report?apikey=%s&resource=%s"
api_key = "<Your virustotal API KEY here>"
timeout  = 10 #seconds
fail_threshold = 2
status_check_interval = 2 #seconds, the time interval after which the submission status check will be called
status_check_timeout = 300 #seconds, the total time duration after which the the status check should be stopped, if not finished
bad_file_status = ["malicious"]
ok_file_status = ["ok"]


[metadefender]
base_url = "https://api.metadefender.com/v4"
scan_endpoint = "/file"
report_endpoint = "/file"
api_key = "<Your metadefender API KEY here>"
timeout  = 10 #seconds
fail_threshold = 2
status_check_interval = 2 #seconds, the time interval after which the submission status check will be called
status_check_timeout = 300 #seconds, the total time duration after which the the status check should be stopped, if not finished
bad_file_status = ["malicious"]
ok_file_status = ["ok"]


[vmray]
base_url = "https://cloud.vmray.com/rest"
submit_endpoint = "/sample/submit"
get_sample_endpoint= "/sample"
submission_status_endpoint = "/submission"
timeout = 10 #seconds , the timeout duration for all the api calls for vmray
status_check_interval = 2 #seconds, the time interval after which the submission status check will be called
status_check_timeout = 300 #seconds, the total time duration after which the the status check should be stopped, if not finished
bad_file_status = ["malicious", "suspicious", "blacklisted"]
ok_file_status = ["not_suspicious" , "whitelisted", "unknown"]
api_key = "<Your vmray API KEY here>"





[clamav]
socket_path = "/var/run/clamav/clamd.ctl"
wait_timeout = 10 #seconds, the time upto which the server will wait for clamav to scan the results
bad_file_status = ["malicious"]
ok_file_status = ["ok"]
